import{_ as s,r,o as n,c as l,b as t,d as o,a,e}from"./app.793a33e0.js";const d={},h=a('<h1 id="pixel-builder" tabindex="-1"><a class="header-anchor" href="#pixel-builder" aria-hidden="true">#</a> Pixel Builder</h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Pixel Builder can be seen as a <strong>Toolbox to Build HTML5 Games</strong>.</p><p>It&#39;s a simple CLI tool that tries to solve 3 common problems:</p><ul><li>Starting Project Faster</li><li>Better Development Tooling</li><li>Build Pipeline</li></ul><p><strong>Pixel Builder</strong> is about tooling, and has almost no impact on the game code itself. If you are already used to build <strong>Games</strong> or <strong>Applications</strong> with libraries like PixiJS, BabylonJS, no new API to learn ... you will feel at home.</p><p>Let&#39;s see each point individually</p><h2 id="\u{1F680}-project-boostrap" tabindex="-1"><a class="header-anchor" href="#\u{1F680}-project-boostrap" aria-hidden="true">#</a> \u{1F680} Project Boostrap</h2><p>This part is usually really time consuming when working on web projects.</p><ul><li>Lot of possible Libraries</li><li>Lot of configurations and incompatibilities</li><li>Lot of knowledge required</li></ul><p><strong>Pixel Builder</strong> comes with a set of questions and pre-configure the project for your needs.</p><p>You can start working on your game in minutes without having to worry about the setup or configuration files.</p><p>Every choice is transparent and easy to change, from there feel free to add libraries or features.</p><h2 id="\u2699\uFE0F-development-tooling" tabindex="-1"><a class="header-anchor" href="#\u2699\uFE0F-development-tooling" aria-hidden="true">#</a> \u2699\uFE0F Development Tooling</h2><h3 id="_1-developer-experience" tabindex="-1"><a class="header-anchor" href="#_1-developer-experience" aria-hidden="true">#</a> 1. Developer Experience</h3><p>Out of the box, <strong>Pixel Builder</strong> comes with expected modern development features</p><ul><li>Development server</li><li>HMR (Auto Reload)</li><li>Pre-compilers (Typescript, Sass, ...)</li></ul>',17),p=e("Under the hood it use "),c={href:"https://vitejs.dev/",target:"_blank",rel:"noopener noreferrer"},u=e("Vite"),m=e(" known for his speed"),f=a('<h3 id="_2-dealing-with-assets" tabindex="-1"><a class="header-anchor" href="#_2-dealing-with-assets" aria-hidden="true">#</a> 2. Dealing with Assets</h3><p>Dealing with assets is always a challenge for games, but more specifically with web games.</p><p>Games often require quick iterations, and a ton of assets. Which lead to unused or duplicated assets, that are slowing down the project and making the build grow.</p><p><strong>Pixel Builder</strong> will help you with most common tasks</p><ul><li>cleaning asset folder</li><li>generating spritesheet</li><li>image optimization, resize</li><li>audio optimization</li></ul><p>Our goal is to provide you tools to simplify your life.</p><p>No crazy dependencies or GUI app to manually install, just use our asset manifest to explicit your needs and we get you covered.</p><hr><h2 id="\u{1F4E6}-build" tabindex="-1"><a class="header-anchor" href="#\u{1F4E6}-build" aria-hidden="true">#</a> \u{1F4E6} Build</h2><p>Finally and maybe the most important one, the build pipeline.</p><h3 id="_1-optimized-by-default" tabindex="-1"><a class="header-anchor" href="#_1-optimized-by-default" aria-hidden="true">#</a> 1. Optimized by default</h3><p>Web Games have to be performant and load fast, which require both code and assets to be small.</p><ul><li>We export only used assets (asset stripping)</li><li>Code is minified and use modern techniques to keep it small (code splitting, tree shaking, ...)</li><li>The build process is fast</li></ul><h3 id="_2-easy-to-share" tabindex="-1"><a class="header-anchor" href="#_2-easy-to-share" aria-hidden="true">#</a> 2. Easy to Share</h3><p>Web games can be annoying to deploy and share sometime. To help you with that , we provide few options:</p>',15),g=t("li",null,[e("We build as "),t("strong",null,"Single Page App"),e(" by default : Static files that can be host anywhere (ftp, github, ...)")],-1),b=e("We can build desktop app with "),_={href:"https://github.com/neutralinojs/neutralinojs",target:"_blank",rel:"noopener noreferrer"},y=e("NeutralinoJS"),w=e(" (Windows, Linux, Mac): Easy to share for Game Jams or "),x={href:"https://itch.io/",target:"_blank",rel:"noopener noreferrer"},v=e("itch.io");function k(B,P){const i=r("ExternalLinkIcon");return n(),l("div",null,[h,t("p",null,[p,t("a",c,[u,o(i)]),m]),f,t("ul",null,[g,t("li",null,[b,t("a",_,[y,o(i)]),w,t("a",x,[v,o(i)])])])])}var L=s(d,[["render",k],["__file","presentation.html.vue"]]);export{L as default};
